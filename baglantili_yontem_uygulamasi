//Önce aşağıda entity framework öncesi kullanılan bağlantılı yöntemi uyguladık.
//Biz bu veriyi artık içeri aldığımızdan içeride de linq to object te öğrendiğimiz gibi sorgulamalar, flitrelemeler vs yapabiliriz.
//Join sonucu gelebilecek bir sorgunun tablosu için ya class açılabilir ya da anonim tip uygulanabilir.


internal class Category
    {
        public int CategoryID { get; set; }
        public string CategoryName { get; set; }
        public string Description { get; set; }

        
        //listbox ilgili satır kadar namespace ile doldu. Polymorphism uyguladık.

        public override string ToString()
        {
            return $"{CategoryID} {CategoryName} {Description}";
        }
    }

//---------------------------------

public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();
        }

        private void btnBaglantili_Click(object sender, EventArgs e)
        {
            //Veritabanına bağlanmak için Connection String gerekli..
            SqlConnection conn = new SqlConnection("Data source=.;initial catalog=Northwind;integrated security=true;Trust Server Certificate=True");

            //Benim macbook ConnectionString
            //SqlConnection conn = new SqlConnection("Data source=MEHMETAYDIN57A1\\SQLEXPRESS;initial catalog=NORTHWND;integrated security=SSPI;User Id=sa;Password=123;Trust Server Certificate=True");

            //SqlConnection altını çizerse crtl+. ile install Microsotf.Data.SqlClient
            //Data source=. aktif olan sql server i seçer. Birden fazla server varsa açık olarak ismini yazmanız gerekiyor.
            //integrated security diyerek windows authotication ile bağlanacağımızı bildiriyoruz.

            //Tools-Connect to database içerisinden de gerektiğinde connection string için faydalanabilirsin.

            conn.Open(); //Baglantiyi aç...

            //Yapılacak is...
            SqlCommand sqlCommand = new SqlCommand("SELECT * FROM Categories", conn);

            //Tum tabloyu oku...
            SqlDataReader dr = sqlCommand.ExecuteReader();

            List<Category> categories = new List<Category>();

            //son kayda kadar tum satırları oku...
            while (dr.Read())
            {

                //Tabloda tutulan her satırı Category nesnesine cevir...
                //GetString gibi id için GetInt kullanırsan converte gerek kalmaz.

                Category category = new Category()
                {
                    CategoryID = Convert.ToInt32(dr[0]),
                    CategoryName = dr.GetString(1),
                    Description = dr.GetString(2)
                };
                //listeye ekle...
                categories.Add(category);

            }
            conn.Close(); //Baglantiyi kapat...

            //verileri listbox icerisinde goster.ççç
            listBox1.DataSource = categories;
        }

    }
